#!/bin/bash -x

# TODO: bunch of commands in here that don't live in this repo...

function is_redhat () {
    type yum
}

# Default to cmake3 since cquery depends on that
function find_cmake3 () {
    if type cmake3 ; then
        echo cmake3
    else
        echo cmake
    fi
}

# c++ (cquery)
function lsp_cpp () {

    if is_redhat ; then
        # el7 has both cmake and cmake3, cquery requires cmake3
        sudo yum install -y cmake cmake3
    fi

    pushd ~/wa/git

    if [ ! -e cquery ] ; then
        git clone https://github.com/cquery-project/cquery.git
    else
        pushd cquery
        git fetch --prune --tags
        popd
    fi

    pushd cquery
    # Only use the latest tag
    git checkout $(git tag -l | sort | tail -n1)

    git submodule sync
    git submodule update --init --recursive
    popd

    mkdir -p cquery/build

    pushd cquery/build

    # TODO: need to make sure it's using a newer toolchain...
    # TODO: consider using ninja?
    $(find_cmake3) -D CMAKE_INSTALL_PREFIX=$LOCAL_INSTALL_DIR -D CMAKE_EXPORT_COMPILE_COMMANDS=ON ..

    make
    make install

    popd

    popd
}

# python
function lsp_python () {

    # Install for both python 2 and 3
    for p in pip pip3 ; do
        # TODO: certificates
        $p install --user 'python-language-server[all]'
        # also install debug server
        $p install --user 'ptvsd>=4.1.1a11'
        # some backends for flycheck
        $p install --user flake8 pylint
    done

    # python 3 only
    pip3 install --user mypy pyls-mypy
}

# Go
function lsp_go () {
    if is_redhat ; then
        sudo yum install -y golang-bin
    # TODO: ubuntu
    fi
    go get -u github.com/sourcegraph/go-langserver
}

# Java
function lsp_java () {
    if [ ! -e ~/.emacs.d/eclipse.jdt.ls/server ] ; then
        rm -f /tmp/jdt-latest.tar
        # NOTE: can't use -c because this file changes
        wget http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz -O /tmp/jdt-latest.tar
        mkdir -p ~/.emacs.d/eclipse.jdt.ls/server/
        tar xf /tmp/jdt-latest.tar -C ~/.emacs.d/eclipse.jdt.ls/server/
        rm -f /tmp/jdt-latest.tar
    else
        echo "Java LS already installed, update inside emacs with M-x lsp-java-update-server"
    fi
}

# Rust
function lsp_rust () {
    if is_redhat ; then
        sudo yum install -y rls-preview rust-analysis rust-src cargo
    else
        curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path
        source $HOME/.cargo/env
        rustup component add rls-preview rust-analysis rust-src
    fi
}

function install_npm () {

    if is_redhat ; then
        sudo yum install -y npm
    fi
}

# Javascript
function lsp_js () {
    install_npm
    sudo npm i -g javascript-typescript-langserver
}

# HTML
function lsp_html () {
    install_npm
    sudo npm i -g vscode-html-languageserver-bin
}

# Bash
function lsp_bash () {
    install_npm
    sudo npm i -g bash-language-server
}

# Run each section
lsp_cpp
lsp_python
lsp_go
lsp_java
lsp_rust
lsp_js
lsp_html
lsp_bash

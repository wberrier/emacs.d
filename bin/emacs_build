#!/usr/bin/env python

import os
import os.path
import sys
import emacsproject.config
#import pprint

# Example config file: (.emacs_project.json)
#{
#	"build": {
#		"debug": {
#			"command": "make -j@NUM_CORES_TO_USE@ debug_target",
#			"working_dir": "build-debug"
#		}
#	}
#}

def getProcCount():
    """ Get number of processors """
    if os.environ.has_key('NUM_CORES_TO_USE'):
        return int(os.environ['NUM_CORES_TO_USE'])

    count = 1
    for line in open("/proc/cpuinfo").readlines():
        if line.startswith("processor"):
            count += 1

    return count


# Default build type
build_type = "release"

if len(sys.argv) > 1:
    build_type = sys.argv[1]

config_dir = emacsproject.config.getConfigDir()

if config_dir == "":
    print "Unable to find " + emacsproject.config.filename
    sys.exit(1)

num_procs = getProcCount()

# Read config file
config = emacsproject.config.loadJsonFile(config_dir + os.sep + emacsproject.config.filename)
#pprint.pprint(config)

# get command and replace core count
command = config['build'][build_type]['command']
working_dir = config_dir + os.path.sep + config['build'][build_type].get('working_dir', '.')
command = command.replace("@NUM_CORES_TO_USE@", str(num_procs))

# Print out directory for emacs benefit (compilation-mode)
# (it's expecting 'make' to be used, which prints out in this format)
print("Entering directory `%s'" % working_dir)
print("Command: " + command)
#sys.exit(1)

# Run command
os.chdir(working_dir)
ret = os.WEXITSTATUS(os.system(command))
sys.exit(ret)


#!/usr/bin/env python

import os
import os.path
import sys
import ConfigParser

# Example config file: (.emacs_build.conf)
#
#[host]
#command=make -j@NUM_CORES_TO_USE@ host_target
#
#[cross]
#command=make -j@NUM_CORES_TO_USE@ cross_target
#
#[debug]
#command=make -j@NUM_CORES_TO_USE@ debug_target
#

def getConfigDir():
    """Get the directory that has the config file"""

    curdir = os.getcwd()
    while curdir != "/":

        test_file = curdir + "/.emacs_build.conf"
        if os.path.exists(test_file):
            return curdir

        curdir = os.path.dirname(curdir)

    # Didn't find the config dir...
    return ""

def getProcCount():
    """ Get number of processors """
    if os.environ.has_key('NUM_CORES_TO_USE'):
        return int(os.environ['NUM_CORES_TO_USE'])

    count = 1
    for line in open("/proc/cpuinfo").readlines():
        if line.startswith("processor"):
            count += 1

    return count


# Default build type
build_type = "host"

if len(sys.argv) > 1:
    build_type = sys.argv[1]

config_dir = getConfigDir()

if config_dir == "":
    print "Unable to find .emacs_build.conf"
    sys.exit(1)

num_procs = getProcCount()

# Read config file
config = ConfigParser.SafeConfigParser()
config.read(config_dir + os.sep + ".emacs_build.conf")

# get command and replace core count
command = config.get(build_type, 'command')
command = command.replace("@NUM_CORES_TO_USE@", str(num_procs))

print("Build directory: " + config_dir)
print("Command: " + command)
#sys.exit(1)

# Run command
os.chdir(config_dir)
os.system(command)

#!/usr/bin/env python

import sys
import os
import os.path
import json

#Sample config (.emacs_project.json)
#{
#    "debug": {
#        "program": "executable",
#        "program_args": "args",
#        "working_dir": "build-debug"
#    }
#}

# TODO: consolidate these helper functions

def removeComments(text):
    ret = ""
    count = 0
    for line in text.split("\n"):
        if not line.lstrip().startswith("//"):
            ret += line + "\n"
            #print str(count) + ":" + line
            count += 1
    return ret

def loadJsonFile(filename):
    # Read config file
    json_text = open(filename).read()
    return json.loads(removeComments(json_text))

def getConfigDir():
    """Get the directory that has the config file"""

    curdir = os.getcwd()
    while curdir != "/":

        test_file = curdir + "/.emacs_project.json"
        if os.path.exists(test_file):
            return curdir

        curdir = os.path.dirname(curdir)

    # Didn't find the config...
    return ""

config_dir = getConfigDir()

if config_dir == "":
    print "Unable to find .emacs_project.json"
    sys.exit(1)

# Read config file
config = loadJsonFile(config_dir + os.sep + ".emacs_project.json")

working_dir = config['debug'].get('working_dir', '.')

gdb_command = config['debug'].get('gdb', 'gdb')
gdb_args = config['debug'].get('gdb_args', '')

program = config['debug']['program']
program_args = config['debug'].get('program_args', '')

command = gdb_command + " " + gdb_args + " -i=mi --args " + program + " " + program_args

# For debugging (can't actually print anything out or else it will mess up emacs)
#print "Running: " + command

# Run debug command
os.chdir(config_dir + os.sep + working_dir)
ret = os.WEXITSTATUS(os.system(command))
sys.exit(ret)

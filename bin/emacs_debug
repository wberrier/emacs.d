#!/usr/bin/env python3

"""Run gdb inside of emacs for a given emacsproject"""

import sys
import os
import os.path
import emacsproject.config

#Sample config (.emacs_project.json)
#{
#    "debug": {
#        "program": "executable",
#        "program_args": "args",
#        "working_dir": "build-debug"
#    }
#}

def main():
    """main"""

    config_dir = emacsproject.config.get_config_dir()

    if config_dir == "":
        print("Unable to find " + emacsproject.config.FILENAME)
        return 1

    # Read config file
    config = emacsproject.config.load_json_file(config_dir + os.sep + emacsproject.config.FILENAME)

    working_dir = config['debug'].get('working_dir', '.')

    gdb_command = config['debug'].get('gdb', 'gdb')
    gdb_args = config['debug'].get('gdb_args', '')

    program = config['debug']['program']
    program_args = config['debug'].get('program_args', '')

    command = gdb_command + " " + gdb_args + " -i=mi --args " + program + " " + program_args

    # For debugging (can't actually print anything out or else it will mess up emacs)
    #print "Running: " + command

    # Run debug command
    os.chdir(config_dir + os.sep + working_dir)
    return os.WEXITSTATUS(os.system(command))

if __name__ == "__main__":
    sys.exit(main())
